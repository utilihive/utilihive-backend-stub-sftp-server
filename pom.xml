<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.greenbird.utilihive.stubs</groupId>
    <artifactId>utilihive-backend-stub-sftp</artifactId>
    <version>1.0.7</version>
    <packaging>jar</packaging>

    <name>Utilihive SFTP Backend Stub</name>
    <description>Stub for SFTP backend, for use in functional testing of Utilihive integration flows</description>
    <url>https://github.com/utilihive/utilihive-backend-stub-sftp-server</url>

    <developers>
        <developer>
            <name>Greenbird Integration Technology</name>
            <organization>Greenbird Integration Technology</organization>
            <organizationUrl>https://www.greenbird.com</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:${project.scm.url}</connection>
        <developerConnection>scm:git:${project.scm.url}</developerConnection>
        <url>git@github.com:utilihive/utilihive-backend-stub-sftp-server.git</url>
    </scm>

    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <properties>
        <annotations.version>23.1.0</annotations.version>
        <apache-sshd.version>2.9.2</apache-sshd.version>
        <assertj.version>3.23.1</assertj.version>
        <commons-io.version>2.11.0</commons-io.version>
        <dokka.version>1.7.20</dokka.version>
        <hubspot-dependency-management-plugin.version>0.4</hubspot-dependency-management-plugin.version>
        <jdk.version>11</jdk.version>
        <jsch.version>0.2.6</jsch.version>
        <junit.version>5.9.1</junit.version>
        <kotlin.version>1.8.0</kotlin.version>
        <maven-build-info.version>1.3</maven-build-info.version>
        <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
        <maven-dependency.version>3.3.0</maven-dependency.version>
        <maven-deploy-plugin.version>3.0.0</maven-deploy-plugin.version>
        <maven-detekt.version>1.22.0</maven-detekt.version>
        <maven-enforcer.version>3.1.0</maven-enforcer.version>
        <maven-gpg.version>1.6</maven-gpg.version>
        <maven-install-plugin.version>3.1.0</maven-install-plugin.version>
        <maven-release.version>3.0.0-M6</maven-release.version>
        <maven-source.version>3.2.1</maven-source.version>
        <maven-surefire.version>3.0.0-M7</maven-surefire.version>
        <memoryfilesystem.version>2.4.0</memoryfilesystem.version>
        <nexus-staging-maven.version>1.6.7</nexus-staging-maven.version>
        <slf4j.version>2.0.1</slf4j.version>
        <sonatype-ossindex-maven-enforcer-rules.version>3.2.0</sonatype-ossindex-maven-enforcer-rules.version>

        <!-- Maven plugins -->
        <maven-dependency-plugin.skip>false</maven-dependency-plugin.skip>
        <maven-dependency-plugin.failOnWarning>true</maven-dependency-plugin.failOnWarning>
        <maven-dependency-plugin.runtimeDependencies>
            org.junit.jupiter:junit-jupiter,org.slf4j:slf4j-api,org.slf4j:slf4j-nop
        </maven-dependency-plugin.runtimeDependencies>

        <!-- Flag indicating if detekt-maven-plugin should be run -->
        <detekt-maven-plugin.skip>false</detekt-maven-plugin.skip>
        <!-- Flag indicating whether to fail builds if Detekt finds issues -->
        <failBuildOnMaxDetektIssuesReached>true</failBuildOnMaxDetektIssuesReached>
        <failBuildOnKotlinCompilerWarnings>true</failBuildOnKotlinCompilerWarnings>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencyManagement />

    <dependencies>
        <!-- Kotlin -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>${annotations.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.marschall</groupId>
            <artifactId>memoryfilesystem</artifactId>
            <version>${memoryfilesystem.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.sshd</groupId>
            <artifactId>sshd-common</artifactId>
            <version>${apache-sshd.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.sshd</groupId>
            <artifactId>sshd-core</artifactId>
            <version>${apache-sshd.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.sshd</groupId>
            <artifactId>sshd-sftp</artifactId>
            <version>${apache-sshd.version}</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.mwiede</groupId>
            <artifactId>jsch</artifactId>
            <version>${jsch.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-nop</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <build>
        <sourceDirectory>src/main/kotlin</sourceDirectory>
        <testSourceDirectory>src/test/kotlin</testSourceDirectory>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.rodiontsev.maven.plugins</groupId>
                    <artifactId>build-info-maven-plugin</artifactId>
                    <version>${maven-build-info.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven-release.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.ozsie</groupId>
                    <artifactId>detekt-maven-plugin</artifactId>
                    <version>${maven-detekt.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jetbrains.dokka</groupId>
                    <artifactId>dokka-maven-plugin</artifactId>
                    <version>${dokka.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <version>${kotlin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${maven-gpg.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>${nexus-staging-maven.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Generate build.properties into classpath -->
            <plugin>
                <groupId>com.rodiontsev.maven.plugins</groupId>
                <artifactId>build-info-maven-plugin</artifactId>
                <configuration>
                    <filename>classes/build.properties</filename>
                    <projectProperties>
                        <projectProperty>project.id</projectProperty>
                        <projectProperty>project.groupId</projectProperty>
                        <projectProperty>project.artifactId</projectProperty>
                        <projectProperty>project.version</projectProperty>
                        <projectProperty>project.name</projectProperty>
                        <projectProperty>project.description</projectProperty>
                    </projectProperties>
                    <systemProperties>
                        <systemProperty>user.name</systemProperty>
                        <systemProperty>user.timezone</systemProperty>
                        <systemProperty>java.home</systemProperty>
                        <systemProperty>java.vm.vendor</systemProperty>
                        <systemProperty>java.vm.version</systemProperty>
                        <systemProperty>java.vm.name</systemProperty>
                        <systemProperty>java.runtime.version</systemProperty>
                        <systemProperty>os.name</systemProperty>
                        <systemProperty>os.version</systemProperty>
                        <systemProperty>os.arch</systemProperty>
                    </systemProperties>
                    <dateTimePattern>yyyy-MM-dd HH:mm:ss.SSS</dateTimePattern>
                    <includeVcsInfo>true</includeVcsInfo>
                </configuration>
                <executions>
                    <execution>
                        <!--
                            We want the info to be available on the classpath when we are running tests.
                            Need to attach to compile since the plugin depends on the build directory to exist
                            before it executes.
                         -->
                        <phase>compile</phase>
                        <goals>
                            <goal>extract</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <args>
                        <arg>-java-parameters</arg>
                        <arg>-Werror=${failBuildOnKotlinCompilerWarnings}</arg>
                    </args>
                    <jvmTarget>${jdk.version}</jvmTarget>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*Test</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.sonatype.ossindex.maven</groupId>
                        <artifactId>ossindex-maven-enforcer-rules</artifactId>
                        <version>${sonatype-ossindex-maven-enforcer-rules.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.hubspot.maven.plugins</groupId>
                        <artifactId>dependency-management-plugin</artifactId>
                        <version>${hubspot-dependency-management-plugin.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>vulnerability-checks</id>
                        <!--
                            Using phase "process-sources" instead of "validate" to run the enforcer in a later phase
                            than the versions plugin which runs under "validate". This enables us to run
                            "mvn -U validate" to pull in new parent POMs with updated enforcer rules and
                            dependencies without the enforcer failing on the current rules and dependencies.
                         -->
                        <phase>process-sources</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <fail>true</fail>
                            <rules>
                                <!-- Security scanning -->
                                <banVulnerable implementation="org.sonatype.ossindex.maven.enforcer.BanVulnerableDependencies">
                                    <cvssScoreThreshold>7.0</cvssScoreThreshold>
                                </banVulnerable>
                                <!-- Enforce dependency management -->
                                <dependencyManagementRule implementation="com.hubspot.maven.plugins.dependency.management.DependencyManagementRule">
                                    <requireManagement>
                                        <dependencies>false</dependencies>
                                        <plugins>false</plugins>
                                        <allowVersions>false</allowVersions>
                                        <allowExclusions>true</allowExclusions>
                                    </requireManagement>
                                </dependencyManagementRule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.ozsie</groupId>
                <artifactId>detekt-maven-plugin</artifactId>
                <configuration>
                    <buildUponDefaultConfig>true</buildUponDefaultConfig>
                    <failBuildOnMaxIssuesReached>${failBuildOnMaxDetektIssuesReached}</failBuildOnMaxIssuesReached>
                    <skip>${detekt-maven-plugin.skip}</skip>
                    <report>
                        <report>html:target/detekt-reports/index.html</report>
                    </report>
                </configuration>
                <executions>
                    <execution>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>analyze</id>
                        <phase>test</phase>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <configuration>
                            <skip>${maven-dependency-plugin.skip}</skip>
                            <failOnWarning>${maven-dependency-plugin.failOnWarning}</failOnWarning>
                            <ignoredUnusedDeclaredDependencies>
                                ${maven-dependency-plugin.runtimeDependencies}
                            </ignoredUnusedDeclaredDependencies>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <scmCommentPrefix>[ci skip]</scmCommentPrefix>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.jetbrains.dokka</groupId>
                        <artifactId>dokka-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>dokka</goal>
                                    <goal>javadocJar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven-gpg.version}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <!-- Prevent `gpg` from using pinentry programs -->
                                    <gpgArguments>
                                        <arg>--pinentry-mode</arg>
                                        <arg>loopback</arg>
                                    </gpgArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>false</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
